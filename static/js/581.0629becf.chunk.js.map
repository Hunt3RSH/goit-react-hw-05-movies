{"version":3,"file":"static/js/581.0629becf.chunk.js","mappings":"oPAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,sGACTF,IAAAA,IAAA,qCAAwCC,IAD/B,cAC1BE,EAD0B,OAE1BC,EAAiBD,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GAE/C,MAAO,CACLC,GAFiCD,EAA3BC,GAGNC,MAHiCF,EAAvBE,MAIVC,YAJiCH,EAAhBG,YAMpB,IAT+B,kBAUzBP,GAVyB,2CAAH,qDAalBQ,EAAiB,mCAAG,WAAMH,GAAN,qGACRT,IAAAA,IAAA,gBAAmBS,EAAnB,oBAAiCR,IADzB,cACzBE,EADyB,SAI7BA,EAASE,KADHQ,EAHuB,EAGvBA,aAAcH,EAHS,EAGTA,MAAOI,EAHE,EAGFA,SAAUC,EAHR,EAGQA,OAAQJ,EAHhB,EAGgBA,YAAaK,EAH7B,EAG6BA,aAH7B,kBAMxB,CACLH,aAAAA,EACAH,MAAAA,EACAI,SAAAA,EACAC,OAAAA,EACAJ,YAAAA,EACAK,aAAAA,IAZ6B,2CAAH,qD,yGChBjBC,EAAWC,EAAAA,GAAAA,QAAH,uoBA4BRC,EAAQD,EAAAA,GAAAA,GAAH,wG,2KC3BLE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,oVAgBVI,EAAiBJ,EAAAA,GAAAA,IAAH,mRAcdK,EAAcL,EAAAA,GAAAA,IAAH,mFAMXM,EAAgBN,EAAAA,GAAAA,IAAH,6LASbO,EAAMP,EAAAA,GAAAA,IAAH,gFAMHQ,EAAeR,EAAAA,GAAAA,IAAH,wH,SCqCzB,EA3EqB,WAAO,IAAD,IACjBS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAM1C,IAJAC,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,IAAkBe,GAASW,KAAKP,EACjC,GAAE,CAACJ,IAEkC,IAAlCY,OAAOC,KAAKV,GAAWW,OACzB,OAAO,KAGT,IAAQ5B,EACNiB,EADMjB,aAAcH,EACpBoB,EADoBpB,MAAOI,EAC3BgB,EAD2BhB,SAAUC,EACrCe,EADqCf,OAAQJ,EAC7CmB,EAD6CnB,YAAaK,EAC1Dc,EAD0Dd,aAEtD0B,EAlBS,kCAkBe/B,EACxBgC,EAAYC,SAAwB,GAAf/B,GACrBgC,EAAa9B,EAAOR,KAAI,SAAAuC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,MAC1CC,EAAcjC,EAAakC,MAAM,KAAK,GAE5C,OACE,UAAC3B,EAAD,YACE,SAAC,IAAD,WACE,UAACD,EAAD,YACE,SAACF,EAAD,CAAY+B,GAAIjB,EAAhB,sBACA,UAACR,EAAD,YACE,SAACD,EAAD,CAAK2B,IAAKV,EAAYW,IAAG,UAAK3C,EAAL,cACzB,0BACE,UAACc,EAAD,YACE,0BACGd,EADH,KACYuC,EADZ,QAGA,wCAAgBN,EAAhB,QACA,sCACA,uBAAI7B,KACJ,oCACA,uBAAI+B,kBAqBd,SAAC,EAAAS,SAAD,CACEC,UACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,gBARnB,UAYE,SAAC,KAAD,QAIP,C","sources":["Utills/Api/api.jsx","Views/HomeView/HomeView.styled.js","Views/MovieDetailsView/MovieDetailsView.styled.js","Views/MovieDetailsView/index.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '40875a7f166b061faf5f77ac964541b9';\n\nexport const loadTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  const trendingMovies = response.data.results.map(movie => {\n    const { id, title, poster_path } = movie;\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n  return trendingMovies;\n};\n\nexport const loadFullInfoMovie = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n  const { vote_average, title, overview, genres, poster_path, release_date } =\n    response.data;\n\n  return {\n    vote_average,\n    title,\n    overview,\n    genres,\n    poster_path,\n    release_date,\n  };\n};\n\nexport const loadCastInfoMovie = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  const castInfo = response.data.cast.map(a => {\n    const { name, character, profile_path, id } = a;\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n\n  return castInfo;\n};\n\nexport const loadReviewsMovie = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results.map(a => {\n    const { id, author, content } = a;\n    return {\n      id,\n      author,\n      content,\n    };\n  });\n\n  return reviews;\n};\n\nexport const loadMovieOnSearch = searchQuery => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`\n  )\n    .then(response => response.json())\n    .then(data => {\n      const movieList = data.results.map(a => {\n        const { id, title } = a;\n        return {\n          id,\n          title,\n        };\n      });\n\n      if (movieList.length === 0) {\n        alert(\"We can't found anythings, please repeate your request\");\n        return;\n      }\n\n      return movieList;\n    });\n};\n","import styled from 'styled-components';\n\nexport const Sections = styled.section`\n  padding-top: 45px;\n  padding-bottom: 45px;\n  width: 100%;\n  max-width: 960px;\n  margin: 0 auto;\n  background: radial-gradient(\n      farthest-side at top right,\n      var(--gradient-right),\n      transparent 500px\n    ),\n    radial-gradient(\n      farthest-corner at top left,\n      var(--gradient-left),\n      transparent 600px\n    ),\n    radial-gradient(\n      farthest-corner at bottom right,\n      var(--gradient-background-right),\n      transparent 500px\n    ),\n    radial-gradient(\n      farthest-corner at bottom left,\n      var(--gradient-background-left),\n      transparent 600px\n    );\n`;\n\nexport const Title = styled.h2`\n  color: white;\n  text-align: center;\n  font-weight: 700;\n  font-size: 32px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonLink = styled(Link)`\n  border-radius: 2px;\n  background: linear-gradient(to right, #75b022 5%, #588a1b 95%);\n  padding: 0 15px;\n  font-size: 15px;\n  line-height: 30px;\n  color: white;\n  margin-bottom: 20px;\n  margin-left: 15px;\n\n  &:hover,\n  &:focus {\n    background: linear-gradient(to right, #8ed629 5%, #6aa621 95%);\n  }\n`;\n\nexport const SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 0 15px;\n  background: linear-gradient(\n    to right,\n    rgba(0, 0, 0, 0) 50%,\n    rgba(0, 0, 0, 0.4) 100%\n  );\n  padding-bottom: 15px;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const DetaisWrapper = styled.div`\n  max-width: 400px;\n  background-color: #101214;\n  background-color: rgba(0, 0, 0, 0.3);\n  backdrop-filter: blur(20px);\n  padding: 10px;\n  border-radius: 3px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  max-width: 450px;\n  width: 100%;\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Blocks } from 'react-loader-spinner';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { loadFullInfoMovie } from 'Utills/Api/api';\nimport { Sections } from 'Views/HomeView/HomeView.styled';\nimport {\n  ButtonLink,\n  DetaisWrapper,\n  Img,\n  InfoWrapper,\n  MovieWrapper,\n  SectionWrapper,\n} from './MovieDetailsView.styled';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState({});\n  const location = useLocation();\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    loadFullInfoMovie(movieId).then(setMovieInfo);\n  }, [movieId]);\n\n  if (Object.keys(movieInfo).length === 0) {\n    return null;\n  }\n\n  const { vote_average, title, overview, genres, poster_path, release_date } =\n    movieInfo;\n  const posterLink = BASE_URL + poster_path;\n  const userScore = parseInt(vote_average * 10);\n  const genresInfo = genres.map(a => a.name).join(', ');\n  const releaseYear = release_date.split('-')[0];\n\n  return (\n    <InfoWrapper>\n      <Sections>\n        <SectionWrapper>\n          <ButtonLink to={backLink}>Go Back</ButtonLink>\n          <MovieWrapper>\n            <Img src={posterLink} alt={`${title} poster`} />\n            <div>\n              <DetaisWrapper>\n                <h2>\n                  {title} ({releaseYear})\n                </h2>\n                <p>User Score: {userScore}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genresInfo}</p>\n              </DetaisWrapper>\n            </div>\n          </MovieWrapper>\n        </SectionWrapper>\n      </Sections>\n      {/* <Sections>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </Sections> */}\n      <Suspense\n        fallback={\n          <Blocks\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"loaderStyle\"\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </InfoWrapper>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","API_KEY","loadTrendingMovies","response","trendingMovies","data","results","map","movie","id","title","poster_path","loadFullInfoMovie","vote_average","overview","genres","release_date","Sections","styled","Title","ButtonLink","Link","SectionWrapper","InfoWrapper","DetaisWrapper","Img","MovieWrapper","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","backLink","state","from","useEffect","then","Object","keys","length","posterLink","userScore","parseInt","genresInfo","a","name","join","releaseYear","split","to","src","alt","Suspense","fallback","visible","height","width","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}